---
import Layout from "../layouts/Layout.astro";
import ThreeScene from "../components/ThreeScene.astro";

import { getCurrentSeasonAndTime } from "../utils/timeUtils";
import { getMergedBirdData } from "../utils/birdDataMerger";

// Initial server-side calculations
const { season, time } = getCurrentSeasonAndTime();
const mergedBirdData = getMergedBirdData();

// Function to get the current bird based on time
function getCurrentBird(season, time, birdData) {
  const currentTimeMinutes = timeToMinutes(time);
  let currentBird = null;
  let latestActiveTime = -1;

  for (const [slug, bird] of Object.entries(birdData)) {
    if (bird.seasons && bird.seasons[season]) {
      const birdTime = bird.seasons[season][0];
      const birdTimeMinutes = timeToMinutes(birdTime);
      if (
        birdTimeMinutes <= currentTimeMinutes &&
        birdTimeMinutes > latestActiveTime
      ) {
        currentBird = slug;
        latestActiveTime = birdTimeMinutes;
      }
    }
  }

  return currentBird;
}

function timeToMinutes(timeStr) {
  const [hours, minutes] = timeStr.split(":").map(Number);
  return hours * 60 + minutes;
}

const currentBirdSlug = getCurrentBird(season, time, mergedBirdData);
const currentBird = currentBirdSlug ? mergedBirdData[currentBirdSlug] : null;
---

<Layout title="Now">
  <main id="bird-display">
    {
      currentBird ? (
        <>
          <ThreeScene imageSlug={`${currentBirdSlug}.jpg`} />
          <h1 id="bird-name">{currentBird.name}</h1>
          <p>
            Scientific Name:{" "}
            <span id="scientific-name">{currentBird.scientificName}</span>
          </p>
          <p>
            Habitat: <span id="habitat">{currentBird.habitat}</span>
          </p>
          <p>
            Description: <span id="description">{currentBird.description}</span>
          </p>
          <p>
            Diet: <span id="diet">{currentBird.diet}</span>
          </p>
          <p>
            Current season: <span id="current-season">{season}</span>
          </p>
          <p>
            Active time this season:{" "}
            <span id="active-time">
              {currentBird.seasons[season]?.[0] || "Not active"}
            </span>
          </p>

          {currentBird.funFacts && currentBird.funFacts.length > 0 && (
            <>
              <h2>Fun Facts</h2>
              <ul id="fun-facts">
                {currentBird.funFacts.map((fact) => (
                  <li>{fact}</li>
                ))}
              </ul>
            </>
          )}
        </>
      ) : (
        <h1>No bird currently in session</h1>
      )
    }
    <p>Current time: <span id="current-time">{time}</span></p>
  </main>

  <script>
    import { getCurrentSeasonAndTime } from "../utils/timeUtils";
    import { getMergedBirdData } from "../utils/birdDataMerger";

    const mergedBirdData = getMergedBirdData();

    function getCurrentBird(season, time, birdData) {
      const currentTimeMinutes = timeToMinutes(time);
      let currentBird = null;
      let latestActiveTime = -1;

      for (const [slug, bird] of Object.entries(birdData)) {
        if (bird.seasons && bird.seasons[season]) {
          const birdTime = bird.seasons[season][0];
          const birdTimeMinutes = timeToMinutes(birdTime);
          if (
            birdTimeMinutes <= currentTimeMinutes &&
            birdTimeMinutes > latestActiveTime
          ) {
            currentBird = slug;
            latestActiveTime = birdTimeMinutes;
          }
        }
      }

      return currentBird;
    }

    function timeToMinutes(timeStr) {
      const [hours, minutes] = timeStr.split(":").map(Number);
      return hours * 60 + minutes;
    }

    function updateDisplay() {
      const { season, time } = getCurrentSeasonAndTime();
      const currentBirdSlug = getCurrentBird(season, time, mergedBirdData);
      const currentBird = currentBirdSlug
        ? mergedBirdData[currentBirdSlug]
        : null;

      document.getElementById("current-season").textContent = season;
      document.getElementById("current-time").textContent = time;

      const birdDisplay = document.getElementById("bird-display");
      if (currentBird) {
        birdDisplay.innerHTML = `
          <astro-island uid="some-unique-id">
            <three-scene image-slug="${currentBirdSlug}.jpg"></three-scene>
          </astro-island>
          <h1 id="bird-name">${currentBird.name}</h1>
          <p>Scientific Name: <span id="scientific-name">${currentBird.scientificName}</span></p>
          <p>Habitat: <span id="habitat">${currentBird.habitat}</span></p>
          <p>Description: <span id="description">${currentBird.description}</span></p>
          <p>Diet: <span id="diet">${currentBird.diet}</span></p>
          <p>Current season: <span id="current-season">${season}</span></p>
          <p>Active time this season: <span id="active-time">${currentBird.seasons[season]?.[0] || "Not active"}</span></p>
          ${
            currentBird.funFacts && currentBird.funFacts.length > 0
              ? `
            <h2>Fun Facts</h2>
            <ul id="fun-facts">
              ${currentBird.funFacts.map((fact) => `<li>${fact}</li>`).join("")}
            </ul>
          `
              : ""
          }
        `;
      } else {
        birdDisplay.innerHTML = "<h1>No bird currently in session</h1>";
      }
    }

    function checkForUpdate() {
      const currentMinutes = new Date().getMinutes();
      if (currentMinutes === 0) {
        updateDisplay();
      }
    }

    // Check for updates every minute
    setInterval(checkForUpdate, 60000);

    // Also update when the page becomes visible again (e.g., after being in a background tab)
    document.addEventListener("visibilitychange", () => {
      if (!document.hidden) {
        updateDisplay();
      }
    });
  </script>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
</style>
